[metadata]
name = GaiaAlertsPy
author = Andy Tzanidakis
author_email = atzanida@uw.edu
license = BSD 3-Clause
license_file = licenses/LICENSE.rst
url = https://github.com/AndyTza/GaiaAlertsPy
description = Analyze and fetch transient data from the Gaia photometric alerts
long_description = file: README.rst

[options]
zip_safe = False
packages = find:
python_requires = >=3.5
setup_requires = setuptools_scm
install_requires =
    astropy
    numpy
[options.extras_require]
all =
test =
    pytest
    pytest-doctestplus
    pytest-cov
    pytest-remotedata
docs =
    sphinx
    sphinx-automodapi
    matplotlib

[options.package_data]
alert = data/*

[tool:pytest]
testpaths = "GaiaAlertsPy" "docs"
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst

[coverage:run]
omit =
  GaiaAlertsPy/__init*
  GaiaAlertsPy/conftest.py
  GaiaAlertsPy/*setup_package*
  GaiaAlertsPy/tests/*
  GaiaAlertsPy/*/tests/*
  GaiaAlertsPy/extern/*
  GaiaAlertsPy/version*
  */GaiaAlertsPy/__init*
  */GaiaAlertsPy/conftest.py
  */GaiaAlertsPy/*setup_package*
  */GaiaAlertsPy/tests/*
  */GaiaAlertsPy/*/tests/*
  */GaiaAlertsPy/extern/*
  */GaiaAlertsPy/version*

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover
  # Don't complain about packages we have installed
  except ImportError
  # Don't complain if tests don't hit assertions
  raise AssertionError
  raise NotImplementedError
  # Don't complain about script hooks
  def main\(.*\):
  # Ignore branches that don't pertain to this version of Python
  pragma: py{ignore_python_version}
  # Don't complain about IPython completion helper
  def _ipython_key_completions_